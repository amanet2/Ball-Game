///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////                                                                  /////////////////////////////////
                                                ==ISSUES==
/////////////////////                                                                 /////////////////////////////////
////////  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
FOCUS ITEMS
* GFX: players need to appear behind higher walls
    -> APPLY the sorting function to all walls, insert the players in there, and draw them all as generic "things"
        -> drawBlockWalls() calls delegate functions for the individual block types (each take a block as a parameter)
    -> sort walls by Y-value and then insert player(s) where they should be in the drawing order
    -> instead of logic on when to draw walls (like you're doing right now) make logic on when to draw player(s)
* GAME: player and names are shaky
* NET: max of 4 players right now
* BOTS: they're shaky
* MAPNAME: has to be a thing
* GFX: adjust player(s) layering by Y level
* NET: Have server not send any other clients' vars if the client is still loading
* NET: The maximum safe UDP payload is 508 bytes. (stackoverflow)
* EDITOR: keep the old export_prefab stuff around, as it's a good feature that can be reintroduced with some tweaking
* MAPMAKER: show all user's preview rect on all clients
###
### POWER GAP
###
* WEAPONS: send a holdingmouse netvar when holding mouse
    -> clients will simulate the fire rate
        -> server holds master state still
    -> instead of sending cmd fireweapon
    -> allows smooth use of automatic weapons
* ATTACK: the rock from gungame
    -> have it bounce lazily
* GAME: edit popups to say things like "#%&@!" when player takes dmg
* GAME: bring back squish effect for something
* ENGINE: create "shadowblock" object that exists to be a shadow which you can add to prefabs
* GFX: shade the lower boxes/cubes a little darker than the high walls
* GAME: in virus, give players infinite ammo
    -> infected have boxing glove
    -> survivors have shotguns
* WAYPOINTS: instead of a complicated-ass system, have the server sync a "waypoints" list with clients
    -> ..., "waypoints": "x:y:arrow/x:y:arrow", ...
* new Item: bonusblock
    -> (make them look like regular blocks)
    -> get its health to 0 and it has a change to spawn a powerup
        -> powerups: small mode, big mode, shotgun(?), bigger rock, fire rate ++, health++
        -> this will be the powerup delivery system.  no placing shotties on map, etc
    -> will respawn after X time
* Interesting attack:
    -> hold mouse to increase size of projectile
    -> click mouse to start blowing up a bubble. click again to launch it before it pops
        -> can get a bigger bubble, skillfully make small ones etc
* other attack:
    -> rock lazily flies for a time
        -> stopped/bounces by walls/players
    -> explodes on a timer
    -> right click could leave a bomb at player loc, left click launches it
* CONSOLE: have a MAX_LINES value to keep the console from having like 1 million lines and slowing down the game
* FUTURE: we can make "themes" for prefabs
* make players bounce off each other
    -> if a player is slower than another, make them take more and the other take less force accordingly
* add ball skins
    -> use existing color architecture
* avoid casting from WIDE scope to NARROWER scope as it introduces overhead
* add zombies gametype, a zopmbie will be a prop
    -> how many ID:coord:coord:attack sets can we cram in a send string
* cant have key bound to multiple actions
* COMMIT SPOT CHECKS
    -> GO TO COMMIT: git checkout <commit>
    -> GO BACK: git checkout <branch_name>
* make sure different timezones and computer times work correctly
* only draw gfx that will be seen
* ISSUE: BULLETS AND ANIMATIONS CAUSE GAME TO STUTTER ON FIRST EXECUTE B/C NOT IN IMAGE MAP YET
* BG MUSIC TRACK/PLAYING CLIPS NEED TO CHANGE VOLUME IMMEDIATELY ON CHANGE
* pong gametype but the players are human paddles
* gungame mode
* put a mini version of the character next to name in scoreboard
    -> with a crown on winner
* start showing errors in debug log
* powerup idea
    -> egg, pick up to initiate the growing sequence
    -> chuck or drop it before it blows
* add "disable attacks" option
* need to see a visual pallette for selecting tiles
* checksum checks
    -> client sends checksum of the jar, and the map file currently played
    -> server verifies these two MD5 hashes against its own md5s
* gametype
    -> bot going after nearest character
        -> if you touch the bot you die
        -> get points for staying alive
* make players eyes blink
* add texture tiling
    -> sprite must be converted to bufferedimage before drawing
* Create a server browser program
* add voip
