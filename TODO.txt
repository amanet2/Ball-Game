///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////                                                                 /////////////////////////////////
                                                ==ISSUES==
/////////////////////                                                                 /////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
FOCUS ITEMS
* NET_MAPMAKER: gets bad desync when not starting from perfect parity
* user player starts getting shaky after a bit
* try to get # of bytes sent per packet down
* The very existence of IS_SERVER and IS_CLIENT are antithetical to the "modular approach"
    -> outside of loop call in uiInterface, shouldnt have to have the if/else
        -> look at how "fireweapon" and "spawnplayer" were refactored for inspiration
            -> client-exclusive and server-exclusive functions are the key
* VOTE_SKIP:
    -> change counter into a hashmap.
        -> once the keycount exceeds limit, change map
            -> remove the keys on client disconnect or map change
* NET: still have to filter out user id in "deleteplayer"
    -> because this function is run on both server and client machines
* NET: The maximum safe UDP payload is 508 bytes. (stackoverflow)
* NET_PLAY: server should override the client "coords" every so often to keep everything in sync
* NET_MAPMAKER: show all user's preview rect on all clients
    -> make a client netvar: {..., "preview": "x:y:w:h", ...}
* GFX: more things should follow a Y-based "draw in front, draw behind" logic as well
    -> walls, players, etc
###
### POWER GAP
###
* ATTACK: the rock from gungame
    -> have it bounce lazily
* GAME: edit popups to say things like "#%&@!" when player takes dmg
* GAME: bring back squish effect for something
* ENGINE: create "shadowblock" object that exists to be a shadow which you can add to prefabs
* GFX: shade the lower boxes/cubes a little darker than the high walls
* GAME: in virus, give players infinite ammo
    -> infected have boxing glove
    -> survivors have shotguns
* WAYPOINTS: instead of a complicated-ass system, have the server sync a "waypoints" list with clients
    -> ..., "waypoints": "x:y:arrow/x:y:arrow", ...
* new Item: bonusblock
    -> (make them look like regular blocks)
    -> get its health to 0 and it has a change to spawn a powerup
        -> powerups: small mode, big mode, shotgun(?), bigger rock, fire rate ++, health++
        -> this will be the powerup delivery system.  no placing shotties on map, etc
    -> will respawn after X time
* Interesting attack:
    -> hold mouse to increase size of projectile
    -> click mouse to start blowing up a bubble. click again to launch it before it pops
        -> can get a bigger bubble, skillfully make small ones etc
* other attack:
    -> rock lazily flies for a time
        -> stopped/bounces by walls/players
    -> explodes on a timer
    -> right click could leave a bomb at player loc, left click launches it
* CONSOLE: have a MAX_LINES value to keep the console from having like 1 million lines and slowing down the game
* FUTURE: we can make "themes" for prefabs
* save lines from server to a map file
* make players bounce off each other
    -> if a player is slower than another, make them take more and the other take less force accordingly
* add ball skins
    -> use existing color architecture
* avoid casting from WIDE scope to NARROWER scope as it introduces overhead
* add zombies gametype, a zopmbie will be a prop
    -> how many ID:coord:coord:attack sets can we cram in a send string
* incorporate enums where possible
* cant have key bound to multiple actions
* COMMIT SPOT CHECKS
    -> GO TO COMMIT: git checkout <commit>
    -> GO BACK: git checkout <branch_name>
* make sure different timezones and computer times work correctly
* only draw gfx that will be seen
* ISSUE: BULLETS AND ANIMATIONS CAUSE GAME TO STUTTER ON FIRST EXECUTE B/C NOT IN IMAGE MAP YET
* BG MUSIC TRACK/PLAYING CLIPS NEED TO CHANGE VOLUME IMMEDIATELY ON CHANGE
* pong gametype but the players are human paddles
* put little representation of the lead character next to the leader string
    -> draw <leader>.sprite (mini style) also draw <leader>.hat mini style
        -> facing the right
* gungame mode
* put a mini version of the character next to name in scoreboard
* start showing errors in debug log now
* make it so teleporters can be configured to retain fv of player, or if the fv needs to be set to a certain value
* powerup idea
    -> egg
    -> pick up
    -> do something to initiate the growing sequence
    -> chuck it before it blows, or drop it
* add "disable attacks" flag
* need to see a visual pallette for selecting tiles
* checksum checks
    -> client sends checksum of the jar, and the map file currently played
    -> server verifies these two MD5 hashes against its own md5s
* gametype
    -> ball thinks like a bot, going after nearest character
        -> if you touch the ball you die
        -> get points for staying alive
* make players eyes blink
* new map lines:
    -> lockcam x y
    -> locks cam at a certain coordinate for duration of the map.
        -> no center cam, no free cam
        -> check in the commandCenterCam and commandSelectUDLR files
    -> lockscale s
        -> locks game scale at certain level for the duration of the map
        -> no zooming allowed
* add texture tiling
    -> sprite must be converted to bufferedimage before drawing
* Create a server browser program
* add voip
